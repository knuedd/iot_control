# name for the sensors in the tree
name: 'garden'
# configure backends
backends:
  mqtt_hass:
    server: '192.168.178.104'
    port: 1883
    user: ''
    password: ''
    # "homeassistant" is the standard value
    hass_discovery_prefix: "homeassistant"
    online_payload: "online"
    offline_payload: "offline"
    payload_off: "off"
    payload_on: "on"
  influx:
    server: '192.168.178.104'
    port: 8086
    user: 'useyourown'
    password: 'secret'
    database: 'myhome'
# configure devices
devices:
  raspi-gpio:
    payload_off: "off"
    payload_on: "on"
    switches:
      relais-pumpe:
        name: Relay Rooftop
        unique_id: "water_relais"
        # PIN as GPIO number, not board number
        pin: 17
        # optional auto-off timer to turn off the device off again after the given time
        autooff: 5

  ads1115:
    sensors:
      # name can be chosen freely
      soil_moisture:
        # an mqtt device class (required, if mqtt is used)
        device_class: "voltage"
        # (required)
        name: "Soil moisture rooftop"
        # the ID of the device. This is only to allow for separate topics for
        # each device and is not used for the entity_id. The ID of the device
        #  must only consist of characters from the character class [a-zA-Z0-9_-]
        #  (alphanumerics, underscore and hyphen). (required)
        unique_id: "soil_moisture_rooftop"
        # (required)
        unit_of_measurement: "V"
        # (required)
        expire_after: 370
  bh1750:
    port: 1
    i2c_address: 0x23
    sensors:
      illuminance:
        device_class: "illuminance"
        name: "Illuminance rooftop"
        unique_id: "illumniance_rooftop"
        unit_of_measurement: "lx"
        expire_after: 370
  bme280:
    port: 1
    i2c_address: 0x76
    sensors:
      humidity:
        # one of the supported MQTT components
        device_class: "humidity"
        name: "humidity rooftop"
        unique_id: "humidity_rooftop"
        unit_of_measurement: "%"
        expire_after: 370
      temperature:
        device_class: "temperature"
        name: "Temperature rooftop"
        unique_id: "temperature_rooftop"
        unit_of_measurement: "Â°C"
        expire_after: 370
      pressure:
        device_class: "pressure"
        name: "pressure rooftop"
        unique_id: "pressure_rooftop"
        unit_of_measurement: "hPa"
        expire_after: 370
    raspi-binary-sensor:
        payload_off: "OFF"
        payload_on: "ON"
        binary-sensors:
            button:
                name: Button
                unique_id: "button"
                device_class: door  # device class according to https://www.home-assistant.io/integrations/binary_sensor/#device-class
                pin: 15 # PIN as GPIO number, not board number
            anotherbutton:
                name: Anotherbutton
                unique_id: "button2"
                device_class: window  # device class according to https://www.home-assistant.io/integrations/binary_sensor/#device-class
                pin: 18 # PIN as GPIO number, not board number
  raspi-cover:
    payload_open: "OPEN"
    payload_close: "CLOSE"
    payload_stop: "STOP"
    state_open: "open" # optional
    state_closed: "closed" #optional
    state_closing: "closing" #optional
    state_unknown: "unknown" #optional
    covers:
      garage:
        name: Testgarage
        unique_id: "testgarage"
        pin_down: 14 # input pin which reads closed when the cover is open/up
        pin_up: 18 # input pin which reads closed when the cover is closed/down
        pin_trigger: 26 # output pin which triggers motor controller
  raspi-positional-cover:
    payload_open: "OPEN"
    payload_close: "CLOSE"
    payload_stop: "STOP"
    position_open: 1600 
    sleeptime: 6 # 6ms sleep between steps
    state_file: "fensterposition.json"
    poscovers:
      fenster_links:
        name: "GWH Fenster links"
        unique_id: "fenster_links"
        motorpins:
            - 12 # Board 32
            - 16 # Board 36
            - 20 # Board 38
            - 21 # Board 40
      fenster_rechts:
        name: "GWH Fenster rechts"
        unique_id: "fenster_rechts"
        motorpins: 
            - 18 # Board 12
            - 23 # Board 16
            - 24 # Board 18
            - 25 # Board 22
  raspi-pwm-light:
    payload_on: "ON"
    payload_off: "OFF"
    pwmlights:
      terrasse:
        name: "First Light"
        unique_id: "firstlight"
        pins: # pins connected to the motor controller, one works as 3V the other as ground
            - 23
            - 24
        pinpwm: 25 # output pin which triggers motor controller
        minval: 20 # adjust to minimum percentage where light is emmitted, brightness command 1% will be cast to this value
        maxval: 100 # maximum value allowed, use to limit maximum brightness
